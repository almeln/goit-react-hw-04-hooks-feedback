{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","css","counter","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Section","title","children","section","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","console","log","totalFeedback","PositiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,8B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,sICuBlBC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,oBAAGG,UAAWC,IAAIC,QAAlB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAIC,QAAlB,gCAA+CH,EAA/C,W,gBCeSI,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEP,UAAWC,IAAIO,OACfC,KAAK,SAELC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,S,gBCMAI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASb,UAAWC,IAAIa,QAAxB,UACE,oBAAId,UAAWC,IAAIW,MAAnB,SAA2BA,IAC1BC,M,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGhB,UAAWC,IAAIgB,aAAlB,SAAiCD,KCC3B,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAwBMC,EAAqB,WAEzB,OADsB5B,EAAOC,EAAUC,GAgBzC,OACE,gCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACA,cAAC,EAAD,CACAR,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5CkB,SAAAE,GACpB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjCC,QAAQC,IAAI/B,GACZ,MAEF,IAAK,UACH0B,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpCC,QAAQC,IAAI9B,GACZ,MAEF,IAAK,MACH0B,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChCC,QAAQC,IAAI7B,GACZ,MAEF,QACE,aA6BF,cAAC,EAAD,CAASe,MAAM,aAAf,SAC4B,IAAzBW,IACD,cAAC,EAAD,CAAcP,QAAQ,sBAE9B,cAAU,EAAV,CACQrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBA7BkC,WACtC,IAAM4B,EAAgBJ,IAChBK,EAA6BC,KAAKC,MACrCnC,EAAOgC,EAAiB,KAG3B,OAAa,IAAThC,EACKiC,EAEF,EAoBiBG,U,MC5D5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.d120272f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Statistics_counter__WMXF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__JfNFo\",\"title\":\"Section_title__dzOKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2YL2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1HERI\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Statistics/Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p className={css.counter}>Total: {total}</p>\n      <p className={css.counter}>Positive Feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/FeedbackOptions/FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          className={css.button}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Section/Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from 'components/Notification/Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={css.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\r\nimport Statistics from 'components/Statistics';\r\nimport FeedbackOptions from 'components/FeedbackOptions';\r\nimport Section from 'components/Section';\r\nimport Notification from 'components/Notification';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const leaveFeedback = option => {\r\n    switch (option) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        console.log(good);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        console.log(neutral);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        console.log(bad);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {    \r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {    \r\n    const totalFeedback = countTotalFeedback();\r\n    const PositiveFeedbackPercentage = Math.round(\r\n      (good / totalFeedback) * 100,\r\n    );\r\n    \r\n    if (good !== 0) {\r\n      return PositiveFeedbackPercentage;\r\n    }\r\n    return 0;\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions \r\n      options={['good', 'neutral', 'bad']} \r\n      onLeaveFeedback={leaveFeedback}\r\n      />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? \r\n        <Notification message=\"No feedback given\"></Notification> \r\n        :\r\n<         Statistics \r\n        good={good} \r\n        neutral={neutral} \r\n        bad={bad} \r\n        total={countTotalFeedback()} \r\n        positivePercentage={countPositiveFeedbackPercentage()}>\r\n        </Statistics>\r\n        }\r\n      </Section>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}